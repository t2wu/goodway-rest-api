openapi: 3.0.0
info:
  title: Goodway Smart Home REST API
  version: 1.27.2
  description: ''
  contact:
    name: John Peng
    email: john_peng@goodway.com.tw
    url: goodeway.com
  termsOfService: 'http://goodway.com/terms-of-use/'
  license:
    name: Goodway License
    url: 'http://goodway.com/license/'
servers:
  - url: 'http://api.goodway.com'
    description: Production
  - description: Development
    url: 'http://api.goodway.com'
paths:
  /gateways:
    post:
      summary: Create a gateway
      description: Create a new gateway
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                dn:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tk01:
                    type: string
                    description: tk01 saved for further implementation
                  tk02:
                    type: string
                    description: tk02 used for connection (gateway ID)
                  muri:
                    type: string
                    description: mqtt uri; for subscribing
                  mtopic:
                    type: string
                    description: mqtt topic; for subscribing
                  mcert:
                    type: string
                    description: 'mqtt cert; for subscribing & publishing'
                  mkey:
                    type: string
                    description: 'mqtt private key; for subscribing & publishing'
                  mrca:
                    type: string
                    description: 'mqtt root ca; for subscribing & publishing'
                  mcid:
                    type: string
                    description: 'mqtt client id; for subscribing & publishing'
                  mport:
                    type: integer
                    description: mqtt port; for subscribing
                  umtopic:
                    type: string
                    description: "user's mqtt topic; for publishing"
                  umuri:
                    type: string
                    description: "user's mqtt uri; for publishing"
                  umport:
                    type: integer
                    description: "user's mqtt port; for publishing"
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 'code; 2:parse error, 3:jwt error 1, 4:jwt error2 5:duplicate'
      tags:
        - Gateways
      operationId: ''
      parameters:
        - schema:
            type: string
          in: header
          name: 'Authorization: Bearer "JWT"'
    parameters: []
  '/gateways/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: the gateway
      operationId: ''
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateway:
                    type: object
                    properties:
                      id:
                        type: string
                      dn:
                        type: string
                      devices:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            dn:
                              type: string
                            status:
                              type: string
                              description: on/off
                            type:
                              type: integer
                              description: '12:tracker, 13:lightsw'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '3:gateway error'
      tags:
        - Gateways
    put:
      summary: Update the gateway
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:gateway error, 4:same name'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: new name
      tags:
        - Gateways
    delete:
      summary: Delete the gateway
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                description: ''
                properties:
                  c:
                    type: integer
                    description: '3:gateway error, 4:children available, 402:jwt error'
                  c2:
                    type: integer
                    description: '2: expire ... 3:other error 4:user error'
      tags:
        - Gateways
      description: Delete the gateway based on the id
  '/rooms/{id}':
    get:
      summary: get rooms of gateway
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: room token
                        name:
                          type: string
                          description: ''
                        active:
                          type: integer
                          description: '1:on, 2:off'
                        devices:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: device token
                        gid:
                          type: string
                          description: gateway token
        '400':
          description: Bad Request
      description: ''
      tags:
        - Rooms
      parameters: []
      operationId: ''
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: Delete the room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                description: '3:group error, 4:children available'
                properties:
                  code:
                    type: integer
      tags:
        - Rooms
      description: Delete the room based on the id
    patch:
      summary: Patch the room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: "2:parse error, 3:group error, 4:device unailable, \n5:duplicate(op=\"add\")\n5:device not in room(op=\"del\")"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  description: add or del
                id:
                  type: string
                  description: "device's ID"
        description: ''
      tags:
        - Rooms
    put:
      summary: Update the room
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:group error, 4:same name'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      tags:
        - Rooms
  '/devices/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update the device
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: new name
      tags:
        - Devices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:device error, 4:same name'
    delete:
      summary: Delete the device
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '3:device error'
      tags:
        - Devices
      description: Delete the device based on the id
  /assistant/execute/:
    parameters: []
    post:
      summary: Execute a scene.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
              examples:
                example-1: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:scene error'
      description: 'For command such as "Alexa, execute scene {scene}"'
      tags:
        - Virtual assistant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                  description: scene name
                uid:
                  type: string
        description: ''
  /assistant/tracker/:
    parameters: []
    post:
      summary: Find an item
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:not avialable'
      description: 'Find the item such for command such as "Alexa, where is my wallet" where "wallet" is the item'
      tags:
        - Virtual assistant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  example: wallet
                uid:
                  type: string
            examples:
              example-1: {}
  '/trackers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update the tracker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse eror, 3:device error, 4:same name, '
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: tracker name
        description: ''
      tags:
        - Trackers
  /devices:
    post:
      summary: Create a device
      description: Create a new device
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                t:
                  type: integer
                  description: '1:lightswitch, 2:tracker'
                pid:
                  type: string
                  description: "gateway's token02;  required for t:1 (lightswitch) only"
                uuid:
                  type: string
                  description: ''
                dn:
                  type: string
                  description: device name
                status:
                  type: integer
                  description: '1:on, 2:off'
              required:
                - t
                - uuid
        description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tk01:
                    type: string
                    description: tk01 saved for further implementation
                  tk02:
                    type: string
                    description: 'for lightswitch (t:1) only; tk02 used for connection (device ID)'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:device error, 4:gateway not exist, 5:gateway offline, 6:device duplicate'
      tags:
        - Devices
      parameters:
        - schema:
            type: string
          in: header
          name: 'Authorization: Bearer "JWT"'
    parameters: []
  /users:
    post:
      summary: ''
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                    description: json web token
                  muri:
                    type: string
                    description: mqtt uri; for subscribing
                  mtopic:
                    type: string
                    description: mqtt topic; for subscribing
                  mcert:
                    type: string
                    description: mqtt cert; for subscribing
                  mkey:
                    type: string
                    description: mqtt private key; for subscribing
                  mrca:
                    type: string
                    description: mqtt root ca; for subscribing
                  mcid:
                    type: string
                    description: mqtt client id; for subscribing
                  mport:
                    type: integer
                    description: mqtt port; for subscribing
                  sessid:
                    type: string
                    description: sessid for current app; for checking mqtt ....; for subscribing
                  mrtopic:
                    type: string
                    description: mqtt return topic
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:user error, 4:password error, 5:others'
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: mobile number
                pwd:
                  type: string
                  description: password
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
          application/EDIFACT:
            schema:
              type: object
              properties: {}
          application/atom+xml:
            schema:
              type: object
              properties: {}
          application/font-woff:
            schema:
              type: object
              properties: {}
          application/gzip:
            schema:
              type: object
              properties: {}
          application/javascript:
            schema:
              type: object
              properties: {}
        description: ''
  /gateways/jwt:
    post:
      summary: ''
      operationId: post-gateways-jwt
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gwjwt:
                    type: string
                    description: 'gateway jwt for initialing gateway & accesing cloud'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 'error code; 2:parse error, 3:duplicate, 4:others'
      parameters:
        - schema:
            type: string
          in: header
          name: 'Authorization: Bearer "JWT"'
      description: get gateway jwt from app for initialing gateway
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: "gateway's uuid"
              required:
                - uuid
      tags:
        - Gateways
  '/scenes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - Scenes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: secene token
                        gid:
                          type: string
                          description: gateway token
                        name:
                          type: string
                        devices:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              active:
                                type: integer
                                description: '1:on, 2:off'
        '400':
          description: Bad Request
      operationId: ''
      description: ''
    put:
      summary: ''
      operationId: 'put-scenes-{id}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: '1:ok'
                properties:
                  code:
                    type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error, 3:scene error, 4:same name'
      tags:
        - Scenes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
    patch:
      summary: ''
      operationId: 'patch-scenes-{id}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: |-
                      2:parse error, 3:scene error, 4:device unavailable, 5:active error (op="add", op="update")
                      6:duplicate(op="add")
                      6:device doesn't in the scene (op="update")
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                op:
                  type: string
                  description: add or del or update;  update for active updating
                id:
                  type: string
                  description: "device's ID"
                active:
                  type: integer
                  description: '1:on, 2:off  (active for op="add" or op="update" only))'
        description: ''
      tags:
        - Scenes
    delete:
      summary: ''
      operationId: 'delete-scenes-{id}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '3:scene error, 4:children available'
      tags:
        - Scenes
  /scenes/:
    post:
      summary: Create a scene
      tags:
        - Scenes
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error'
      operationId: ''
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                gid:
                  type: string
                  description: gateway id
  /assistant/parse:
    post:
      summary: ''
      operationId: post-assistant-parse
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '21:room not available, 22:no items in room, 23:device no available, 24:not mapping device in room, 31:room not available, 32:no items in room, 41:room not available, 42:no items in room, 43: device not available, 44:not mapping device in room'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                sentence:
                  type: string
                action:
                  type: string
                  description: on/off
                uid:
                  type: string
      tags:
        - Virtual assistant
  /users/join:
    post:
      summary: ''
      operationId: post-users-join
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:param error, 3:name format error, 4:mail format error, 5:pass length error, 6:pass unmatch, 7:pass format error (digitials and letters only) 8:not authorized (user), 9:account has been banned(user), 10: name duplicate; 11.not authorized(mail), 12:account has been banned(mail); 13. mail duplicate 14. send mail error'
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  description: email
                pwd:
                  type: string
                  description: password; at least 5 characters
                rpwd:
                  type: string
                  description: retype password
                name:
                  type: string
                  description: user name;  at least 5 characters
        description: ''
  '/users/activation/{atext}':
    parameters:
      - schema:
          type: string
        name: atext
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '3:user error, 4:auth already, 5:user has been banned, 6:auth code (atext) expired'
  /users/reactivation:
    post:
      summary: ''
      operationId: post-users-reactivation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '1:ok'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:params error; 3:user error; 4:auth error, 5:user banned, 6:mail server error'
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: user name
  /system/info:
    get:
      summary: Your GET endpoint
      tags:
        - system
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
      operationId: get-system-info
  '/gateways/{id}/rtoken':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: ''
      tags:
        - Gateways
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gwjwt:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: 'error code; 2:parse error, 3:dtk error, 5:token error, 7:not within 10days, 8:user not exist, 9:user has been banned, 10:user not auth yet, 11:renew error'

      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ''
  /rooms/:
    get:
      summary: Get all rooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        active:
                          type: string
                          description: '1:on, 2:off'
                        devices:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
        '400':
          description: Bad Request
      description: Get all rooms (light switches) this user has.
      tags:
        - Rooms
    post:
      summary: Create a room
      description: Create a new room
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "room's name"
                gid:
                  type: string
                  description: gateway id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: "room's id"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    description: '2:parse error'
      tags:
        - Rooms
    parameters: []
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          refreshUrl: ''
          scopes: []
        authorizationCode:
          authorizationUrl: ''
          tokenUrl: ''
          refreshUrl: ''
          scopes: []
